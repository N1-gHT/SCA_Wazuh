# Security Configuration Assessment
# CIS Checks for Debia Linux 12
#
# This program is an improved version of the cis_debian12.yml from Wazuh
# You can found it at the following links : 
# https://github.com/wazuh/wazuh/blob/main/ruleset/sca/debian/cis_debian12.yml
#
#
# Based on : 
# Center for Internet Security Debian Linux 12 Benchmark v1.1.0 - 26-09-2024

policy:
  id: "cis_debian_12"
  file: "cis_debian_12.yml"
  version: "0.1"
  name: "Center for Internet Security Debian Linux 12 Benchmark v1.1.0"
  description: "This document provide prescriptive guidance for establishing a secure configuration posture for Debian 12. This version is pursuing the best guidance for server so there is level 1 and level 2 rule. It's also applicable to workstation but not guarantee for the current version."
  references:
    - https://www.cisecurity.org/cis-benchmarks

requirements:
  title:  "Check of the Debian version"
  description: "Requirements for running the SCA scan"
  condition: all
  rules:
    - "f:/etc/debian_version -> r:12\\."
    - "f:/proc/sys/kernel/ostype -> r:Linux"
    - "f:/etc/os-release -> r:NAME && r:Debian"
    - "f:/etc/os-release -> r:Version= && r:12"

checks:

# 1 - Initial Setup
# 1.1 - Filesystem
# 1.1.1 - Configure filesystem kernel modules
#
#
# 1.1.1.1 Ensure cramfs kernel module is not available. (Automated)
  - id: 1111
    title: "Ensure cramfs kernel module is not available."
    description: "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image."
    rationale: "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install cramfs /bin/false or /bin.true` and `blacklist cramfs`. Then run `modprobe -r cramfs 2>/dev/null; rmmod cramfs 2>/dev/null` to remove cramfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.1"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v cramfs -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c:modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+cramfs'
      - 'not c:lsmod -> r:^cramfs\s'

# 1.1.1.2 Ensure freevxfs kernel module is not available. (Automated)
  - id: 1112
    title: "Ensure freevxfs kernel module is not available."
    description: "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems."
    rationale: "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install freevxfs /bin/(false|true)` and `blacklist freevxfs`. Then run `modprobe -r freevxfs 2>/dev/null; rmmod freevxfs 2>/dev/null` to remove freevxfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.2"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v freevxfs -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c: modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+freevxfs'
      - 'not c:lsmod -> r:^freevxfs\s'

# 1.1.1.3 Ensure hfs kernel module is not available. (Automated)
  - id: 1113
    title: 'Ensure hfs kernel module is not available.'
    description: "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems."
    rationale: "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install hfs /bin/(false|true)` and `blacklist hfs`. Then run `modprobe -r hfs 2>/dev/null; rmmod hfs 2>/dev/null` to remove hfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.3"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v hfs -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c:modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+hfs'
      - 'not c:lsmod -> r:^hfs\s'

# 1.1.1.4 Ensure hfsplus  kernel module is not available. (Automated)
  - id: 1114
    title: "Ensure hfs kernel module is not available."
    description: "The hfsplus filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems."
    rationale: "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install hfsplus /bin/(false|true)` and `blacklist hfsplus`. Then run `modprobe -r hfsplus 2>/dev/null; rmmod hfsplus 2>/dev/null` to remove hfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.4"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v hfsplus -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c:modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+hfsplus'
      - 'not c:lsmod -> r:^hfsplus\s'

# 1.1.1.5 Ensure jffs2 kernel module is not available. (Automated)
  - id: 1115
    title: "Ensure hfs kernel module is not available."
    description: "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices."
    rationale: "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install jffs2 /bin/(false|true)` and `blacklist jffs2`. Then run `modprobe -r jffs2 2>/dev/null; rmmod jffs2 2>/dev/null` to remove hfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.5"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v jffs2 -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c:modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+jffs2'
      - 'not c:lsmod -> r:^jffs2\s'

# 1.1.1.6 Ensure overlayfs kernel module is not available. (Automated)
  - id: 1116
    title: "Ensure overlayfs kernel module is not available."
    description: "The overlayfs is a Linux filesystem that layers multiple filesystems to create a single unified view which allows a user to merge several mount points into a unified filesystem."
    rationale: "The overlayfs has known CVEs: CVE-2023-32629, CVE-2023-2640, CVE-2023-0386. Disabling the overlayfs reduces the local attack surface by removing support for unnecessary filesystem types and mitigates potential risks associated with unauthorized execution of setuid files, enhancing the overall system security."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install overlayfs /bin/(false|true)` and `blacklist overlayfs`. Then run `modprobe -r overlayfs 2>/dev/null; rmmod overlayfs 2>/dev/null` to remove hfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.6"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v overlayfs -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c:modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+overlayfs'
      - 'not c:lsmod -> r:^overlayfs\s'

# 1.1.1.7 Ensure squashfs kernel module is not available. (Automated)
  - id: 1117
    title: "Ensure squashfs kernel module is not available."
    description: "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A squashfs image can be used without having to first decompress the image."
    rationale: "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install squashfs /bin/(false|true)` and `blacklist squashfs`. Then run `modprobe -r squashfs 2>/dev/null; rmmod squashfs 2>/dev/null` to remove hfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.7"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v squashfs -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c:modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+squashfs'
      - 'not c:lsmod -> r:^squashfs\s'

# 1.1.1.8 Ensure udf kernel module is not available. (Automated)
  - id: 1118
    title: "Ensure udf kernel module is not available."
    description: "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats."
    rationale: "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install udf /bin/(false|true)` and `blacklist udf`. Then run `modprobe -r udf 2>/dev/null; rmmod udf 2>/dev/null` to remove hfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.8"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v udf -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c:modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+udf'
      - 'not c:lsmod -> r:^udf\s'

# 1.1.1.9 Ensure usb-storage kernel module is not available. (Automated)
  - id: 1119
    title: "Ensure usb-storage kernel module is not available."
    description: "USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment."
    rationale: "Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware."
    remediation: "Create or edit a file in /etc/modprobe.d/ .Add the following lines in it `install usb-storage /bin/(false|true)` and `blacklist usb-storage`. Then run `modprobe -r usb-storage 2>/dev/null; rmmod usb-storage 2>/dev/null` to remove hfs from the kernel."
    level: "Level 1"
    references: 
      - ""
    compliance:
      - cis: ["1.1.1.9"]
      - others: ["unknow"]
    condition: all
    rules: 
      - 'c:modprobe -n -v usb-storage -> r:^\s*install\s+/bin/false | ^\s*install\s+/bin/true'
      - 'c:modprobe --showconfig | grep blacklist -> r:^\s*blacklist\s+usb-storage'
      - 'not c:lsmod -> r:^usb-storage\s'

# 1.1.1.10 Ensure unused filesystems kernel modules are not available. (Manual)
#  - id: 11110
#    title: "Ensure unused filesystems are not available."

# 1.1.2.1 - Configure /tmp
#
#

# 1.1.2.1.1 Ensure /tmp is a separate partition. (Automated)
  - id: 11211
    title: "Ensure /tmp is a separate partition."
    description: "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications. - IF - an entry for /tmp exists in /etc/fstab it will take precedence over entries in systemd default unit file. Note: In an environment where the main system is diskless and connected to iSCSI, entries in /etc/fstab may not take precedence. /tmp can be configured to use tmpfs. tmpfs puts everything into the kernel internal caches and grows and shrinks to accommodate the files it contains and is able to swap unneeded pages out to swap space. It has maximum size limits which can be adjusted on the fly via mount -o remount. Since tmpfs lives completely in the page cache and on swap, all tmpfs pages will be shown as Shmem in /proc/meminfo and Shared in free. Notice that these counters also include shared memory. The most reliable way to get the count is using df and du. tmpfs has three mount options for sizing: - size: The limit of allocated bytes for this tmpfs instance. The default is half of your physical RAM without swap. If you oversize your tmpfs instances the machine will deadlock since the OOM handler will not be able to free that memory. - nr_blocks: The same as size, but in blocks of PAGE_SIZE. - nr_inodes: The maximum number of inodes for this instance. The default is half of the number of your physical RAM pages, or (on a machine with highmem) the number of lowmem RAM pages, whichever is the lower. These parameters accept a suffix k, m or g and can be changed on remount. The size parameter also accepts a suffix % to limit this tmpfs instance to that percentage of your physical RAM. The default, when neither size nor nr_blocks is specified, is size=50%."
    rationale: "Making /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken, and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp."
    impact: "By design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted. If files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp. Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition. Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based."
    remediation: "First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time. # systemctl unmask tmp.mount For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab. Example of using tmpfs with specific mount options: tmpfs /tmp 0 tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 Note: the size=2G is an example of setting a specific size for tmpfs. Example of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment: <device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0."
    level: "Level 1"
    references:
      - "https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/"
      - "https://www.freedesktop.org/software/systemd/man/systemd-fstab-generator.html"
      - "https://www.kernel.org/doc/Documentation/filesystems/tmpfs.txt"
    compliance:
      - cis: ["1.1.2.1.1"]
      - cis_csc_v8: ["4.8"]
      - cis_csc_v7: ["9.2"]
      - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
      - iso_27001-2013: ["A.13.1.3"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1499", "T1499.001"]
      - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.2.2", "2.2.5"]
      - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
      - soc_2: ["CC6.3", "CC6.6"]
    condition: all
    rules:
      - 'c:findmnt -kn /tmp -> r:^\s*/tmp\s'
      - 'c:systemctl is-enabled tmp.mount -> !r:masked|disabled && r:generated|enabled'

# 1.1.2.1.2 Ensure nodev option set on /tmp partition. (Automated)
  - id: 11212
    title: "Ensure nodev option set on /tmp partition."
    description: "The nodev mount option specifies that the filesystem cannot contain special devices."
    rationale: "Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /tmp."
    remediation: "- IF - a separate partition exists for /tmp. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.1.2"]
      - cis_csc_v8: ["4.8"]
      - cis_csc_v7: ["9.2"]
      - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
      - iso_27001-2013: ["A.13.1.3"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1200"]
      - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.2.2", "2.2.5"]
      - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
      - soc_2: ["CC6.3", "CC6.6"]
    condition: all
    rules:
      - 'c:findmnt -kn /tmp -> r:nodev'

# 1.1.2.1.3 Ensure nosuid option set on /tmp partition. (Automated)
  - id: 11213
    title: "Ensure nosuid option set on /tmp partition."
    description: "The nosuid mount option specifies that the filesystem cannot contain setuid files."
    rationale: "Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp."
    remediation: "- IF - a separate partition exists for /tmp. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.1.3"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1548", "T1548.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /tmp -> r:nosuid'

# 1.1.2.1.4 Ensure noexec option set on /tmp partition. (Automated)
  - id: 11214
    title: "Ensure noexec option set on /tmp partition."
    description: "The noexec mount option specifies that the filesystem cannot contain executable binaries."
    rationale: "Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp."
    impact: "Setting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software."
    remediation: "- IF - a separate partition exists for /tmp. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.1.4"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1204", "T1204.002"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /tmp -> r:noexec'

# 1.1.2.2 - Configure /dev/shm
#
#

# 1.1.2.2.1 Ensure /dev/shm is a separate partition. (Automated)
  - id: 11221
    title: "Ensure /dev/shm is a separate partition."
    description: "The /dev/shm directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC)."
    rationale: "Making /dev/shm its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. This can be accomplished by mounting tmpfs to /dev/shm."
    impact: "Since the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. /dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab."
    remediation: "For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab. Example: tmpfs /dev/shm defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0 tmpfs."
    level: "Level 1"
    references:
      - "https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/"
      - "https://www.freedesktop.org/software/systemd/man/systemd-fstab-generator.html"
    compliance:
      - cis: ["1.1.2.2.1"]
      - cis_csc_v8: ["4.8"]
      - cis_csc_v7: ["9.2"]
      - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
      - iso_27001-2013: ["A.13.1.3"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1499", "T1499.001"]
      - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.2.2", "2.2.5"]
      - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
      - soc_2: ["CC6.3", "CC6.6"]
    condition: all
    rules:
      - 'c:findmnt -kn /dev/shm -> r:^\s*/dev/shm\s'

# 1.1.2.2.2 Ensure nodev option set on /dev/shm partition. (Automated)
  - id: 11222
    title: "Ensure nodev option set on /dev/shm partition."
    description: "The nodev mount option specifies that the filesystem cannot contain special devices."
    rationale: "Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions."
    remediation: "- IF - a separate partition exists for /dev/shm. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.2.2"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1200"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /dev/shm -> r:nodev'

# 1.1.2.2.3 Ensure nosuid option set on /dev/shm partition. (Automated)
  - id: 11223
    title: "Ensure nosuid option set on /dev/shm partition."
    description: "The nosuid mount option specifies that the filesystem cannot contain setuid files."
    rationale: "Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them."
    remediation: "- IF - a separate partition exists for /dev/shm. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.2.3"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1038"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1548", "T1548.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /dev/shm -> r:nosuid'

# 1.1.2.2.4 Ensure noexec option set on /dev/shm partition. (Automated)
  - id: 11224
    title: "Ensure noexec option set on /dev/shm partition."
    description: "The noexec mount option specifies that the filesystem cannot contain executable binaries."
    rationale: "Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system."
    remediation: "- IF - a separate partition exists for /dev/shm. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.2.4"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1204", "T1204.002"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /dev/shm -> r:noexec'

# 1.1.2.3 - Configure /home
#
#

# 1.1.2.3.1 Ensure separate partition exists for /home. (Automated)
  - id: 11231
    title: "Ensure separate partition exists for /home."
    description: "The /home directory is used to support disk storage needs of local users."
    rationale: "The default installation only creates a single / partition. Since the /home directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /home and impact all local users. Configuring /home as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limit an attacker's ability to create exploits on the system. In the case of /home options such as usrquota/grpquota may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. As /home contains user data, care should be taken to ensure the security and integrity of the data and mount point."
    impact: "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
    remediation: "For new installations, during installation create a custom partition setup and specify a separate partition for /home. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate."
    level: "Level 2"
    references:
      - "http://tldp.org/HOWTO/LVM-HOWTO/"
    compliance:
      - cis: ["1.1.2.3.1"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1038"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1499", "T1499.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /home -> r:^\s*/home\s'

# 1.1.2.3.2 Ensure nodev option set on /home partition. (Automated)
  - id: 11232
    title: "Ensure nodev option set on /home partition."
    description: "The nodev mount option specifies that the filesystem cannot contain special devices."
    rationale: "Since the /home filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /home."
    remediation: "- IF - a separate partition exists for /home. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition. Example: <device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /home with the configured options: # mount -o remount /home."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.3.2"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1038"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1200"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /home -> r:nodev'

# 1.1.2.3.3 Ensure nosuid option set on /home partition. (Automated)
  - id: 11233
    title: "Ensure nosuid option set on /home partition."
    description: "The nosuid mount option specifies that the filesystem cannot contain setuid files."
    rationale: "Since the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home."
    remediation: "- IF - a separate partition exists for /home. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition. Example: <device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /home with the configured options: # mount -o remount /home."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.3.3"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1548", "T1548.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /home -> r:nosuid'

# 1.1.2.4 - Configure /var
#
#

# 1.1.2.4.1 Ensure separate partition exists for /var. (Automated)
  - id: 11241
    title: "Ensure separate partition exists for /var."
    description: "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable."
    rationale: "The reasoning for mounting /var on a separate partition is as follows. The default installation only creates a single / partition. Since the /var directory may contain world writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system. In addition, other operations on the system could fill up the disk unrelated to /var and cause unintended behavior across the system as the disk is full. See man auditd.conf for details. Configuring /var as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limit an attacker's ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. An example of exploiting /var may be an attacker establishing a hard-link to a system setuid program and waiting for it to be updated. Once the program is updated, the hard-link can be broken and the attacker would have their own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw."
    impact: "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
    remediation: "For new installations, during installation create a custom partition setup and specify a separate partition for /var. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate."
    level: "Level 2"
    references:
      - "http://tldp.org/HOWTO/LVM-HOWTO/"
    compliance:
      - cis: ["1.1.2.4.1"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0006"]
      - mitre_techniques: ["T1499", "T1499.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var -> r:^\s*/var\s'

# 1.1.2.4.2 Ensure nodev option set on /var partition. (Automated)
  - id: 11242
    title: "Ensure nodev option set on /var partition."
    description: "The nodev mount option specifies that the filesystem cannot contain special devices."
    rationale: "Since the /var filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var."
    remediation: "- IF - a separate partition exists for /var. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition. Example: <device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var with the configured options: # mount -o remount /var."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.4.2"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1200"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var -> r:nodev'

# 1.1.2.4.3 Ensure nosuid option set on /var partition. (Automated)
  - id: 11243
    title: "Ensure nosuid option set on /var partition."
    description: "The nosuid mount option specifies that the filesystem cannot contain setuid files."
    rationale: "Since the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var."
    remediation: "- IF - a separate partition exists for /var. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition. Example: <device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var with the configured options: # mount -o remount /var."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.4.3"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1548", "T1548.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var -> r:nosuid'

# 1.1.2.5 - Configure /var/tmp
#
#

# 1.1.2.5.1 Ensure separate partition exists for /var/tmp. (Automated)
  - id: 11251
    title: "Ensure separate partition exists for /var/tmp."
    description: "The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in /var/tmp are to be preserved between reboots."
    rationale: "The default installation only creates a single / partition. Since the /var/tmp directory is world-writable, there is a risk of resource exhaustion. In addition, other operations on the system could fill up the disk unrelated to /var/tmp and cause potential disruption to daemons as the disk is full. Configuring /var/tmp as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limit an attacker's ability to create exploits on the system."
    impact: "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
    remediation: "For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate."
    level: "Level 2"
    references:
      - "http://tldp.org/HOWTO/LVM-HOWTO/"
    compliance:
      - cis: ["1.1.2.5.1"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1499", "T1499.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var/tmp -> r:^\s*/var/tmp\s'

# 1.1.2.5.2 Ensure nodev option set on /var/tmp partition. (Automated)
  - id: 11252
    title: "Ensure nodev option set on /var/tmp partition."
    description: "The nodev mount option specifies that the filesystem cannot contain special devices."
    rationale: "Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/tmp."
    remediation: "- IF - a separate partition exists for /var/tmp. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.5.2"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1499", "T1499.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var/tmp -> r:nodev'

# 1.1.2.5.3 Ensure nosuid option set on /var/tmp partition. (Automated)
  - id: 11253
    title: "Ensure nosuid option set on /var/tmp partition."
    description: "The nosuid mount option specifies that the filesystem cannot contain setuid files."
    rationale: "Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp."
    remediation: "- IF - a separate partition exists for /var/tmp. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.5.3"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1548", "T1548.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var/tmp -> r:nosuid'

 # 1.1.2.5.4 Ensure noexec option set on /var/tmp partition. (Automated)
  - id: 11254
    title: "Ensure noexec option set on /var/tmp partition."
    description: "The noexec mount option specifies that the filesystem cannot contain executable binaries."
    rationale: "Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp."
    remediation: "- IF - a separate partition exists for /var/tmp. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.5.4"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1204", "T1204.002"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var/tmp -> r:noexec'

# 1.1.2.6 - Configure /var/log
#
#

# 1.1.2.6.1 Ensure separate partition exists for /var/log. (Automated)
  - id: 11261
    title: "Ensure separate partition exists for /var/log."
    description: "The /var/log directory is used by system services to store log data."
    rationale: "The default installation only creates a single / partition. Since the /var/log directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. Configuring /var/log as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limit an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. As /var/log contains log files, care should be taken to ensure the security and integrity of the data and mount point."
    impact: "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
    remediation: "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate."
    level: "Level 2"
    references:
      - "http://tldp.org/HOWTO/LVM-HOWTO/"
    compliance:
      - cis: ["1.1.2.6.1"]
      - cis_csc_v8: ["8.3"]
      - cis_csc_v7: ["6.4"]
      - iso_27001-2013: ["A.12.4.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1499", "T1499.001"]
      - pci_dss_v3.2.1: ["10.7"]
      - soc_2: ["A1.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var/log -> r:^\s*/var/log\s'

# 1.1.2.6.2 Ensure nodev option set on /var/log partition. (Automated)
  - id: 11262
    title: "Ensure nodev option set on /var/log partition."
    description: "The nodev mount option specifies that the filesystem cannot contain special devices."
    rationale: "Since the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log."
    remediation: "- IF - a separate partition exists for /var/log. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log."
    level: "Level 2"
    compliance:
      - cis: ["1.1.2.6.2"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1038"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1200"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - "c:findmnt -kn /var/log -> r:nodev"

# 1.1.2.6.3 Ensure nosuid option set on /var/log partition. (Automated)
  - id: 11263
    title: "Ensure nosuid option set on /var/log partition."
    description: "The nosuid mount option specifies that the filesystem cannot contain setuid files."
    rationale: "Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log."
    remediation: "- IF - a separate partition exists for /var/log. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.6.3"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1548", "T1548.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - "c:findmnt -kn /var/log -> r:nosuid"

# 1.1.2.6.4 Ensure noexec option set on /var/log partition. (Automated)
  - id: 11264
    title: "Ensure noexec option set on /var/log partition."
    description: "The noexec mount option specifies that the filesystem cannot contain executable binaries."
    rationale: "Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log."
    remediation: "- IF - a separate partition exists for /var/log. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.6.4"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1204", "T1204.002"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - "c:findmnt -kn /var/log -> r:noexec"

# 1.1.2.7 - Configure /var/log/audit
#
#

# 1.1.2.7.1 Ensure separate partition exists for /var/log/audit. (Automated)
  - id: 11271
    title: "Ensure separate partition exists for /var/log/audit."
    description: "The auditing daemon, auditd, stores log data in the /var/log/audit directory."
    rationale: "The default installation only creates a single / partition. Since the /var/log/audit directory contains the audit.log file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/log/audit and cause auditd to trigger its space_left_action as the disk is full. See man auditd.conf for details. Configuring /var/log/audit as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limit an attacker's ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. As /var/log/audit contains audit logs, care should be taken to ensure the security and integrity of the data and mount point."
    impact: "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations."
    remediation: "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate."
    level: "Level 2"
    references:
      - "http://tldp.org/HOWTO/LVM-HOWTO/"
    compliance:
      - cis: ["1.1.2.7.1"]
      - cis_csc_v8: ["8.3"]
      - cis_csc_v7: ["6.4"]
      - iso_27001-2013: ["A.12.4.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1499", "T1499.001"]
      - pci_dss_v3.2.1: ["10.7"]
      - soc_2: ["A1.1"]
    condition: all
    rules:
      - 'c:findmnt -kn /var/log/audit -> r:^\s*/var/log/audit\s'

# 1.1.2.7.2 Ensure nodev option set on /var/log/audit partition. (Automated)
  - id: 11272
    title: "Ensure nodev option set on /var/log/audit partition."
    description: "The nodev mount option specifies that the filesystem cannot contain special devices."
    rationale: "Since the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log/audit."
    remediation: "- IF - a separate partition exists for /var/log/audit. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.7.2"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1200"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - "c:findmnt -kn /var/log/audit -> r:nodev"

# 1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition. (Automated)
  - id: 11273
    title: "Ensure nosuid option set on /var/log/audit partition."
    description: "The nosuid mount option specifies that the filesystem cannot contain setuid files."
    rationale: "Since the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit."
    remediation: "- IF - a separate partition exists for /var/log/audit. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.7.3"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1548", "T1548.001"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - "c:findmnt -kn /var/log/audit -> r:nosuid"

# 1.1.2.7.4 Ensure noexec option set on /var/log/audit partition. (Automated)
  - id: 11274
    title: "Ensure noexec option set on /var/log/audit partition."
    description: "The noexec mount option specifies that the filesystem cannot contain executable binaries."
    rationale: "Since the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit."
    remediation: "- IF - a separate partition exists for /var/log/audit. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit."
    level: "Level 1"
    compliance:
      - cis: ["1.1.2.7.4"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1204", "T1204.002"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - "c:findmnt -kn /var/log/audit -> r:noexec"

# 1.2 - Package Management
# 1.2.1 - Configure Package Repositories
#
#
# The creation of a “to be verified” category seems necessary for rules that can only be implemented entirely manually.

# 1.2.1.1 Ensure GPG Keys are configured (Manual)
#  - id: 1211
#    title: "Ensure GPG Keys are configured."
#    description: "Most package managers implement GPG Keys signing to verify package integrity during installation."
#    rationale: "It is important to ensure that updates are obtained from a valide source to protect against spoofing that could lead to the inadvertent installation of malware on the system."
#    remediation: "Update your package manager GPG keys in accordance with site policy."
#    level: "Level 1"
#    compliance:
#      - cis: ["1.2.1.1"]
#      - others: [""]
#    condition: all
#    rules:
#      - 
# This rule is currently not implementable because it requires human intervention

# 1.2.1.2 Ensure package manager repositories are configured (Manual)
#  - id: 1212
#    title: "Ensure package manager repositories are configured."
#    description: "Systems need to have package manager repositories configured to ensure they receive the latest patches and updates."
#    rationale: "If a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software."
#    remediation: "Configure your package manager repositories according to site policy."
#    level: "Level 1"
#    compliance:
#      - cis: ["1.2.1.2"]
#      - others: [""]
#    condition: all
#    rules:
#      - "c:apt-cache policy -> r:"
# This rule is currently not implementable because it requires human intervention

# 1.2.2 - Configure Package Updates
#
#

# 1.2.2.1 Ensure update, patches, and additional security software are installed (Manual)
  - id: 1221
    title: "Ensure updates, patches, and additionnal security software are installed."
    description: "Periodically patches are released for included software either due to security flaws or to include additional functionality."
    rationale: ""
    remediation: "Run the following command to update all packages following local site policy guidance. # apt update && apt upgrade or # apt update && apt dist-upgrade."
    level: "Level 1"
    compliance:
      - cis: ["1.2.2.1"]
      - mitre_mitigations: ["M1051"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1195", "T1195.001"]
      - others: [""]
    condition: all
    rules:
      - 'c:apt update -> r:^All packages are up to date.'
      - 'c:apt -s upgrade -> r:^0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.'

# 1.3 - Mandatory Access Control
# 1.3.1 - Configure AppArmor
#
#

# 1.3.1.1 Ensure AppArmor is installed (Automated)
  - id: 13111
    title: "Ensure AppArmor is installed."
    description: "AppArmor provides Mandatory Access Controls."
    rationale: "Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
    remediation: "Install AppArmor. # apt install apparmor apparmor-utils."
    level: "Level 1"
    compliance:
      - cis: ["1.3.1.1"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1026"]
      - mitre_tactics: ["TA0003"]
      - mitre_techniques: ["T1068", "T1565", "T1565.001", "T1565.003"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:dpkg-query -W -f="\${Status}" apparmor -> r:^\\s*install\\s+ok\\s+installed$'
      - 'c:dpkg-query -W -f="\${Status}" apparmor-utils -> r:^\\s*install\\s+ok\\s+installed$'

# 1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration. (Automated)
  - id: 1312
    title: "Ensure AppArmor is enabled in the bootloader configuration."
    description: "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters. Note: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings."
    rationale: "AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden."
    remediation: 'Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line GRUB_CMDLINE_LINUX="apparmor=1 security=apparmor" Run the following command to update the grub2 configuration: # update-grub.'
    level: "Level 1"
    compliance:
      - cis: ["1.3.1.2"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1026"]
      - mitre_tactics: ["TA0003"]
      - mitre_techniques: ["T1068", "T1565", "T1565.001", "T1565.003"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'f:/boot/grub/grub.cfg -> r:\s*\t*linux && !r:apparmor=1'
      - 'f:/boot/grub/grub.cfg -> r:\s*\t*linux && !r:security=apparmor'

# 1.3.1.3 Ensure AppArmor Profiles are in enforce or complain mode. (Automated)
  - id: 1313
    title: "Ensure AppArmor Profiles are ine enforce or complain mode."
    description: "AppArmor profiles define what ressources applications are able to access."
    rationale: "Security configuration requirements vary from site to site. This item is intended to ensure that any policies that exist on the system are activated"
    remediation: "Run the following command to set all profiles to enforce mode : # aa-enforce /etc/apparmor.d/* or run this command to set in profiles to complain mode : # aa-complain /etc/apparmor.d/*. NOTE: Any unconfined processes may need to have a profile created or activated for them and then be restarted."
    level: "Level 1"
    compliance:
      - cis: ["1.3.1.3"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - mitre_mitigations: ["----"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1497"]
      - nist_sp_800-53: ["AC-3"]
    condition: all
    rules:
      - 'c:apparmor_status -> r:^\d+\s+profiles\s+are\s+loaded'
      - 'c:apparmor_status -> r:^\d+\s+profiles\s+are\s+in\s+enforce\s+mode'
      - 'c:apparmor_status -> r:^\d+\s+profiles\s+are\s+in\s+complain\s+mode'
      - 'not c:apparmor_status -> r:^[1-9]\d*\s+profiles\s+are\s+unconfined\s+mode'
      - 'not c:apparmor_status -> r:^[1-9]\d*\s+processes\s+are\s+unconfined'

# 1.3.1.4 Ensure all AppArmor Profiles are in enforce mode. (Automated)
  - id: 1314
    title: "Ensure AppArmor Profiles are ine enforce or complain mode."
    description: "AppArmor profiles define what ressources applications are able to access."
    rationale: "Security configuration requirements vary from site to site. This item is intended to ensure that any policies that exist on the system are activated"
    remediation: "Run the following command to set all profiles to enforce mode : # aa-enforce /etc/apparmor.d/* or run this command to set in profiles to complain mode : # aa-complain /etc/apparmor.d/*. NOTE: Any unconfined processes may need to have a profile created or activated for them and then be restarted."
    level: "Level 2"
    compliance:
      - cis: ["1.3.1.4"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - mitre_mitigations: ["M1048"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1068", "T1068.000", "T1565", "T1565.001", "T14565.003"]
      - nist_sp_800-53: ["AC-3"]
    condition: all
    rules:
      - 'c:apparmor_status -> r:^[1-9]\d*\s+profiles\s+are\s+loaded'
      - 'c:apparmor_status -> r:^[1-9]\d*\s+profiles\s+are\s+in\s+enforce\s+mode'
      - 'c:apparmor_status -> r:^0\s+profiles\s+are\s+in\s+complain\s+mode'
      - 'c:apparmor_status -> r:^0\s+profiles\s+are\s+in\s+unconfined\s+mode'
      - 'c:apparmor_status -> r:^0\s+processes\s+are\s+unconfined'
      - 'c:apparmor_status -> r:^0\s+processes\s+are\s+in\s+complain\s+mode'

# 1.4 - Configure Bootloader
#
#

# 1.4.1 Ensure bootloader password is set (Automated)
  - id: 141
    title: "Ensure bootloader password is set."
    description: "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters."
    rationale: "Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time)."
    impact: 'If password protection is enabled, only the designated superuser can edit a GRUB 2 menu item by pressing "e" or access the GRUB 2 command line by pressing "c" If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable to do so, the configuration files will have to be edited via a LiveCD or other means to fix the problem You can add --unrestricted to the menu entries to allow the system to boot without entering a password. A password will still be required to edit menu items. More Information: https://help.ubuntu.com/community/Grub2/Passwords.'
    remediation: 'Create an encrypted password with grub-mkpasswd-pbkdf2: # grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64 Enter password: <password> Reenter password: <password> PBKDF2 hash of your password is <encrypted-password> Add the following into a custom /etc/grub.d configuration file: cat <<EOF exec tail -n +2 $0 set superusers="<username>" password_pbkdf2 <username> <encrypted-password> EOF The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update. If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS= Example: CLASS="--class gnu-linux --class gnu --class os --unrestricted" Run the following command to update the grub2 configuration: # update-grub.'
    level: "Level 1"
    compliance:
      - cis: ["1.4.1"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1046"]
      - mitre_tactics: ["TA0003"]
      - mitre_techniques: ["T1542"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'f:/boot/grub/grub.cfg -> r:^\s*\t*set superusers="[\w@-]+"'
      - 'f:/boot/grub/grub.cfg -> r:^\s*\t*password_pbkdf2\s*\t*[\w@-]+\s+grub\.pbkdf2'

# 1.4.2 Ensure access to bootloader config is configured. (Automated)
  - id: 142
    title: "Ensure access to bootloader config is configured."
    description: "The grub configuration file contains information on boot settings and passwords for unlocking boot options."
    rationale: "Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them."
    remediation: "Run the following commands to set permissions on your grub configuration: # chown root:root /boot/grub/grub.cfg # chmod u-x,go-rwx /boot/grub/grub.cfg."
    level: "Level 1"
    compliance:
      - cis: ["1.4.2"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005", "TA0007"]
      - mitre_techniques: ["T1542"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:stat -Lc "%n %a %u %U %g %G" /boot/grub/grub.cfg -> r:0 root 0 root && r:600'

# 1.5 - Configure additionnal Process Hardening
#
#

# 1.5.1 Ensure address layout randomization is enabled (Automated)
  - id: 151
    title: "Ensure access to bootloader config is configured."
    description: "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process."
    rationale: "Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistenly shiftings."
    remediation: "Set the parameter # kernel.randomuze_va_space = 2 in /etc/sysctl.conf or in a fil in /etc/sysctl.d/ ending in .conf."
    level: "Level 1"
    compliance:
      - cis: ["1.5.1"]
      - cis_csc_v8: ["10.5"]
      - cis_csc_v7: ["8.3"]
      - mitre_mitigations: ["M1050"]
      - mitre_tactics: ["TA0002"]
      - mitre_techniques: ["T1068", "T1068.000"]
      - nist_sp_800-53: ["CM-6"]
    condition: all
    rules:
      - 'c:sysctl kernel.randomize_va_space -> r:^kernel\.randomize_va_space\s*=\s*2$'
      - 'f:/etc/sysctl.conf,/etc/sysctl.d/*.conf -> r:^\s*kernel\.randomize_va_space\s*=\s*2'
      - 'f:/etc/sysctl.conf,/etc/sysctl.d/*.conf -> !r:^\s*kernel\.randomize_va_space\s*=\s*[01]\b'

# 1.5.2 Ensure ptrace_scope is restricted (Automated)
  - id: 152
    title: "Ensure ptrace_scope is restricted"
    description: "The ptrace() system call provides a means by which one process may observe and control the execution of another process, and examine and change the tracee's memory registers."
    rationale: "If one application is compromised, it would be possible for an attacker to attach to other running processes to extract additional credentials and continue to expand the scope of their attack."
    remediation: "Set the parameter # kernel.yama.ptrace_scope parameter in /etc/sysctl.conf or in a file in /etc/sysctl.d/ ending in .conf to a value of 1,2 or 3."
    level: "Level 1"
    compliance:
      - cis: ["1.5.2"]
      - cis_csc_v8: ["4.8"]
      - cis_csc_v7: ["9.2"]
      - mitre_mitigations: ["1040"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1055", "T1055.008"]
      - nist_sp_800-53: ["CM-6"]
    condition: all
    rules:
      - 'c:sysctl kernel.yama.ptrace_scope -> r:^kernel\.yama\.ptrace_scope\s*=s\*[13]'
      - 'f:/etc/sysctl.conf,/etc/sysctl.d/*.conf -> r:^kernel\.yama\.ptrace_scope\s*=s\*[13]'
      - 'f:/etc/sysctl.conf,/etc/sysctl.d/*.conf -> !r:^kernel\.yama\.ptrace_scope\s*=s\*0\b'

# 1.5.3 Ensure core dumps are restricted (Automated)
  - id: 153
    title: "Ensure core dumps are restricted"
    description: "A core dump is the memory of an executable program. It is used to determine why a program aborted. It can also be used to glean confidential information from a core file."
    rationale: "Setting a hard limit on a core dumps prevents users from overrinding the soft variable. If a core dumps are required, consider sttings limits for user groups."
    remediation: "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file # * hard core 0. Set the following parameter in /Etc/sysctl.conf or a file in /etc/sysctl.d ending in .conf # fs.suid_dumpable = 0. If systemd-coredump is installed, edit /etc/systemd/coredump.conf and add/modify the following lines # Storage=none ProcessSizeMax=0. Then run # systemctl daemon-reload."
    level: "Level 1"
    compliance:
      - cis: ["1.5.3"]
      - nist_sp_800-53: ["CM-6"]
      - mitre_mitigations: ["M1057"]
      - mitre_tactics: ["TA0007"]
      - mitre_techniques: ["T1005", "T1005.000"]
    condition: all
    rules:
      - 'c:sysctl fs.suid_dumpable -> r:^\s*fs\.suid_dumpable\s*=\s*0$'
      - 'f:/etc/security/limits.conf -> r:^[^#;]\s*\*\s+hard\s*core\s*0\b'
      - 'f:/etc/security/limits.d/*.conf -> r:^[^#;]\s*\*\s+hard\s*core\s*0\b'
      - 'f:/etc/sysctl.conf,/etc/sysctl.d/*.conf -> r:^[^#;]\s*fs\.suid_dumpable\s*=\s*0'

# 1.5.3 Ensure core dumps are restricted (Automated)
  - id: 154
    title: "Ensure core dumps are restricted with coredump"
    description: "A core dump is the memory of an executable program. It is used to determine why a program aborted. It can also be used to glean confidential information from a core file."
    rationale: "Setting a hard limit on a core dumps prevents users from overrinding the soft variable. If a core dumps are required, consider sttings limits for user groups."
    remediation: "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file # * hard core 0. Set the following parameter in /Etc/sysctl.conf or a file in /etc/sysctl.d ending in .conf # fs.suid_dumpable = 0. If systemd-coredump is installed, edit /etc/systemd/coredump.conf and add/modify the following lines # Storage=none ProcessSizeMax=0. Then run # systemctl daemon-reload."
    level: "Level 1"
    compliance:
      - cis: ["1.5.3"]
      - nist_sp_800-53: ["CM-6"]
      - mitre_mitigations: ["M1057"]
      - mitre_tactics: ["TA0007"]
      - mitre_techniques: ["T1005", "T1005.000"]
    condition: all
    rules:
      - 'c:dpkg-query -W -f="\${Status}" systemd-coredump -> r:^\s*install\s+ok\s+installed$'
      - 'f:/etc/systemd/coredump.conf -> r:^[^#;]\s*Storage=none$' 
      - 'f:/etc/systemd/coredump.conf -> r:^[^#;]\s*ProcessSizeMax=0$'

# 1.6 - Configure Command Line Warning Banners
#
#

# 1.6.1 Ensure message of the day is configured properly (Automated)
  - id: 161
    title: "Ensure message of the day is configured properly."
    description: "The content of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users."
    rationale: "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organizations that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system."
    remediation: "Edit the /etc/motd file with the appropriate contents according to you site policy, remove any instances of \\m, \\r, \\s,\\v or references to the OS platform. Or if the motd is not used, this file can be removed, run the following command to remove the motd file # rm /etc/motd."
    level: "Level 1"
    compliance:
      - cis: ["1.6.1"]
      - nist_sp_800-53: ["CM-6", "CM-1", "CM-3"]
      - mitre_mitigations: ["----"]
      - mitre_tactics: ["TA0007"]
      - mitre_techniques: ["T1082", "1082.000", "T1592", "T1592.004"]
    condition: any
    rules:
      - 'not f:/etc/motd'
      - 'not f:/etc/motd -> r:\\v|\\r|\\m|\s|Debian|Ubuntu'

# 1.6.2 Ensure local login warning banner is configured properly (Automated)
  - id: 162
    title: "Ensure local warning banner is configured properly."
    description: "The contents of th /etc/issue file are displayed to users prior to login for local terminals."
    rationale: "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organizations that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system."
    remediation: "Edit the /etc/issue file with the appropriate contents according to you site policy, remove any instances of \\m, \\r, \\s,\\v or references to the OS platform."
    level: "Level 1"
    compliance:
      - cis: ["1.6.2"]
      - nist_sp_800-53: ["CM-6", "CM-1", "CM-3"]
      - mitre_mitigations: ["----"]
      - mitre_tactics: ["TA0007"]
      - mitre_techniques: ["T1082", "1082.000", "T1592", "T1592.004"]
    condition: all
    rules:
      - 'not f:/etc/issue -> r:\\v|\\r|\\m|\s|Debian|Ubuntu'

# 1.6.3 Ensure remote login warning banner is configured properly (Automated)
  - id: 163
    title: "Ensure remote warning banner is configured properly."
    description: "The contents of th /etc/issue.net file are displayed to users prior to login for local terminals."
    rationale: "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organizations that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system."
    remediation: "Edit the /etc/issue.net file with the appropriate contents according to you site policy, remove any instances of \\m, \\r, \\s,\\v or references to the OS platform."
    level: "Level 1"
    compliance:
      - cis: ["1.6.3"]
      - nist_sp_800-53: ["CM-6", "CM-1", "CM-3"]
      - mitre_mitigations: ["----"]
      - mitre_tactics: ["TA0007"]
      - mitre_techniques: ["T1082", "1082.000", "T1592", "T1592.004"]
    condition: all
    rules:
      - 'not f:/etc/issue.net -> r:\\v|\\r|\\m|\s|Debian|Ubuntu'

# 1.6.4 Ensure access to /etc/motd is configured. (Automated)
  - id: 164
    title: "Ensure access to /etc/motd is configured."
    description: "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users."
    rationale: "- IF - the /etc/motd file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information."
    remediation: "Run the following commands to set mode, owner, and group on /etc/motd: # chown root:root $(readlink -e /etc/motd) # chmod u-x,go-wx $(readlink -e /etc/motd) - OR - Run the following command to remove the /etc/motd file: # rm /etc/motd."
    level: "Level 1"
    compliance:
      - cis: ["1.6.4"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1222", "T1222.002"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: any
    rules:
      - "not f:/etc/motd"
      - 'c:stat -L "%n %a %u %U %g %G" /etc/motd -> r:0 root 0 root && r:644|640|600|400'

# 1.6.5 Ensure access to /etc/issue is configured. (Automated)
  - id: 165
    title: "Ensure access to /etc/issue is configured."
    description: "The contents of the /etc/issue file are displayed to users prior to login for local terminals."
    rationale: "- IF - the /etc/issue file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information."
    remediation: "Run the following commands to set mode, owner, and group on /etc/issue: # chown root:root $(readlink -e /etc/issue) # chmod u-x,go-wx $(readlink -e /etc/issue)."
    level: "Level 1"
    compliance:
      - cis: ["1.6.5"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1222", "T1222.002"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:stat -L "%n %a %u %U %g %G" /etc/issue -> r:0 root 0 root && r:644|640|600|400'

# 1.6.6 Ensure access to /etc/issue.net is configured. (Automated)
  - id: 33053
    title: "Ensure access to /etc/issue.net is configured."
    description: "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services."
    rationale: "- IF - the /etc/issue.net file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information."
    remediation: "Run the following commands to set mode, owner, and group on /etc/issue.net: # chown root:root $(readlink -e /etc/issue.net) # chmod u-x,go-wx $(readlink -e /etc/issue.net)."
    level: "Level 1"
    compliance:
      - cis: ["1.6.6"]
      - cis_csc_v8: ["3.3"]
      - cis_csc_v7: ["14.6"]
      - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
      - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
      - iso_27001-2013: ["A.9.1.1"]
      - mitre_mitigations: ["M1022"]
      - mitre_tactics: ["TA0005"]
      - mitre_techniques: ["T1222", "T1222.002"]
      - nist_sp_800-53: ["AC-5", "AC-6"]
      - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
      - pci_dss_v4.0: ["1.3.1", "7.1"]
      - soc_2: ["CC5.2", "CC6.1"]
    condition: all
    rules:
      - 'c:stat -L "%n %a %u %U %g %G" /etc/issue.net -> r:0 root 0 root && r:644|640|600|400'

# 1.7 - Configure GNOME Display Manager
#
#

# 1.7.1 Ensure GDM is removed (Automated)
  - id: 171
    title: "Ensure GDM is removed."
    description: "The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins."
    rationale: "If a Graphical User Interface (GUI) is not required, it should be removed to reduce the attack surface of the system."
    impact: "Removing the GNOME Display manager will remove the Graphical User Interface (GUI) from the system."
    remediation: "Run the following commands to uninstall gdm3 and remove unused dependencies: # apt purge gdm3 # apt autoremove gdm3."
    level: "Level 2"
    compliance:
      - cis: ["1.7.1"]
      - cis_csc_v8: ["4.8"]
      - cis_csc_v7: ["9.2"]
      - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
      - iso_27001-2013: ["A.13.1.3"]
      - mitre_mitigations: ["M1033"]
      - mitre_tactics: ["TA0002"]
      - mitre_techniques: ["T1543", "T1543.002"]
      - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.2.2", "2.2.5"]
      - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
      - soc_2: ["CC6.3", "CC6.6"]
    condition: all
    rules:
      - "not c:dpkg-query -s gdm3 -> r:install ok installed"
